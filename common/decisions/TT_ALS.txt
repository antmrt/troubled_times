#If you change the values loc for WTT_border_incident_delay_until_new_incident_180 and WTT_border_incident_delay_until_new_incident_120 has to be changed
@border_incident_escalation_countdown = 30
@border_conflict_incident_forgotten_timer = 30
@border_conflict_escalate_to_war_countdown = 45
@border_conflict_time_until_cancelled = 360

TT_ALS_border_skirmishes = {
	BTE_escalate_incident_to_border_conflict = {

		icon = border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.attacker_state_vs_@ROOT = {
				is_fully_controlled_by = ROOT
			}
			divisions_in_border_state = {
				state = var:FROM.attacker_state_vs_@ROOT
				border_state = var:FROM.defender_state_vs_@ROOT
				size > 0
			}
		}

		highlight_state_targets = {
			state = var:FROM.attacker_state_vs_@ROOT			
		}

		ai_will_do = {
			base = 4000
			modifier = {
				
			}
		}

		cancel_trigger = {
			is_in_faction_with = FROM
		}

		selectable_mission = yes

		fire_only_once = yes #Reactivation handled in effect

		days_mission_timeout = @border_conflict_incident_forgotten_timer

		timeout_effect = {
			custom_effect_tooltip = WTT_border_incident_delay_until_new_incident_120
			hidden_effect = {
				FROM = { remove_targeted_decision = { target = ROOT decision = WTT_border_conflict_escalation_warning_defender } }
				FROM = {
					var:attacker_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					var:defender_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
			}
		}

		complete_effect = {
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:FROM.attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = wtt_border_conflict_won_attacker.1
					on_lose = wtt_border_conflict_lost_attacker.1
					on_cancel = wtt_border_conflict_canceled_attacker.1
				}
				
				defender = {
					state = var:FROM.defender_state_vs_@ROOT
					num_provinces = 4
					on_win = wtt_border_conflict_won_defender.1
					on_lose = wtt_border_conflict_lost_defender.1
					on_cancel = wtt_border_conflict_canceled_defender.1
				}
			}
			FROM = {
				activate_targeted_decision = { target = ROOT decision = WTT_border_conflict_escalate_conflict }
				activate_targeted_decision = { target = ROOT decision = WTT_border_conflict_time_until_cancelled }
			}
			activate_targeted_decision = { target = FROM decision = WTT_border_conflict_escalate_conflict }
			activate_targeted_decision = { target = FROM decision = WTT_border_conflict_time_until_cancelled }
		}
	}
	stage_incident_at_border = {
		icon = border_war
		target_root_trigger = {
			always = yes
		}
		target_array = neighbors

		target_trigger = {
			always = yes
		}
		visible = {
			FROM = { exists = yes }
			NOT = { has_war_with = FROM }
			FROM = { has_not_initiated_border_incident_with_ROOT = yes }
			FROM = {
				NOT = {
					is_subject_of = ROOT
				}
				NOT = {
					is_in_faction_with = ROOT
				}
			}
			NOT = { is_subject_of = FROM }
			NOT = { has_border_war_with = FROM }
			FROM = {
				any_owned_state = {
					is_controlled_by = FROM
					OR = {
						is_claimed_by = ROOT 
						is_core_of = ROOT
					}
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						is_fully_controlled_by = ROOT
					}
				}
			}
		}
		days_remove = 20
		available = {
			FROM = {
				any_owned_state = {
					is_controlled_by = FROM
					any_neighbor_state = {
						is_fully_controlled_by = ROOT
						set_temp_variable = { var:attacker_state_temp = id }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					}
					NOT = { has_state_flag = border_incident_active }
					set_temp_variable = { var:defender_state_temp = id }
				}
			}
			NOT = { has_non_aggression_pact_with = FROM }
		}
		highlight_states = {
			highlight_states_trigger = {
				
				OR = {
					state = FROM.defender_state_vs_@ROOT
					AND = {
						is_owned_and_controlled_by = FROM
						OR = {
							is_claimed_by = ROOT 
							is_core_of = ROOT
						}
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							is_fully_controlled_by = ROOT
						}
					}
				}
			}
		}
		complete_effect = {
			hidden_effect = {
				FROM = {
					random_owned_controlled_state = {
						limit = {
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							OR = {
								is_claimed_by = ROOT 
								is_core_of = ROOT
							}
							any_neighbor_state = {
								hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
								has_ROOT_at_least_1_div_in_current_state_scope = yes
								is_fully_controlled_by = ROOT
							}
						}
						save_event_target_as = defender_state
						set_variable = { FROM.defender_state_vs_@ROOT = id }
						set_temp_variable = { defender_state_temp = id }
						set_state_flag = border_incident_active
					}
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					save_event_target_as = attacker_state
					set_variable = { FROM.attacker_state_vs_@ROOT = id }
					set_temp_variable = { attacker_state_temp = id }
					set_state_flag = border_incident_active
				}
			}
			custom_effect_tooltip = WTT_border_incident_delay_until_new_incident_180
			FROM = {
				country_event = { id = wtt_border_incident_defender_warning.1 hours = 1 }
				activate_targeted_decision = { target = ROOT decision = WTT_border_conflict_incident_warning_defender }				
			} 
		}
		remove_effect = {
			hidden_effect = {
				var:FROM.defender_state_vs_@ROOT = {
					save_event_target_as = defender_state 
				}
				var:FROM.attacker_state_vs_@ROOT = {
					save_event_target_as = attacker_state 
				}
				FROM = {
					random_owned_controlled_state = {
						limit = {
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							any_neighbor_state = {
								is_fully_controlled_by = ROOT
								has_ROOT_at_least_1_div_in_current_state_scope = yes
								hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							}
						}
						set_temp_variable = { defender_state_temp = id }
					}
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					set_temp_variable = { attacker_state_temp = id }
				}
			}
			activate_targeted_decision = { target = FROM decision = BTE_escalate_incident_to_border_conflict }
		}
	}
	
}