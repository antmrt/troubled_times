TT_influenza_epidemic = {


	distribute_masks = {

		days_remove = 10

		modifier = {
			custom_modifier_tooltip = distributing_masks_tt
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10 
				check_variable = {
					daily_deaths > 10
				}
			}
			modifier = {
				factor = 10
				check_variable = {
					daily_deaths > 100
				}
			}
			modifier = {
				factor = 10
				check_variable = {
					daily_deaths > 1000
				}
			}
		}



	}
	setup_quarantines = {
		days_remove = 40
		visible = {
			check_variable = {
				daily_deaths > 500
			}
		}
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10 
				check_variable = {
					daily_deaths > 10
				}
			}
			modifier = {
				factor = 10
				check_variable = {
					daily_deaths > 100
				}
			}
			modifier = {
				factor = 10
				check_variable = {
					daily_deaths > 1000
				}
			}
		}
		remove_effect = {
			subtract_from_variable = {
				disease_progression_rate = 0.05
				tooltip = disease_progression_rate_tt
			}
		}

	}
	remove_influenza = {
		complete_effect = {
			every_country = {
				limit = {
					has_dynamic_modifier = { modifier = TEST_foreign_industry_dynamic_modifier}
				}
				add_manpower = 1000000
				set_variable = {daily_deaths = 0.1}
				set_variable = { disease_progression_rate = 1.2 }
				remove_dynamic_modifier = { modifier = TEST_foreign_industry_dynamic_modifier}
			}
			
		}
	}
	launch_epidemic = {
		complete_effect = {
			set_variable = {daily_deaths = 0.1}
			set_variable = { disease_progression_rate = 1.2 }
			add_dynamic_modifier = { modifier = TEST_foreign_industry_dynamic_modifier}
		}
	}




}

category_test_decisions = {

	open_space_program = {
		visible = {
			is_debug = yes
		}
		complete_effect = {
			set_country_flag = show_space_program
		}
	}
	test_space_claim = {
		visible = {
			is_debug = yes
		}

		complete_effect = {
			set_variable = {
				global.moon_control^1 = USA
			}
			set_variable = {
				global.moon_control^2 = ITA
			}
			
			#set_variable = { 
			#	moon_zone = 1
			#}
			#set_temp_variable = {
			#	temp_claimer_id = ROOT
			#}
			#modify_moon_claim = yes

			#set_variable = { 
			#	moon_zone = 2
			#}
			#set_temp_variable = {
			#	temp_claimer_id = ITA
			#}
			#modify_moon_claim = yes
		}
	}
	clear_moon_claim = {
		visible = {
			is_debug = yes
		}
		complete_effect = {
			
			clear_variable = moon_control^1
		}
	}

}

TT_european_reconstruction = {
	TT_reparation_conference = {
		days_mission_timeout = 15
		is_good = yes
		activation = {
			FRA = {
				has_completed_focus = TT_INT_FRA_create_reparation_comitee
			}
		}
		timeout_effect = {
			if = {
				limit = {
					ROOT = {
						tag = FRA
					}
				}
				GER = {
					add_political_power = -25
				}
			}
			
		}
		priority = 10
		available = {
			hidden_trigger = {
				always = no
			}
		}
	}
	TT_GER_reparation_payment = {
		fire_only_once = yes
		priority = 10
		is_good = yes
		days_mission_timeout = 30
		available = {
			hidden_trigger = {
				always = no
			}
		} 
		activation = {
			always = no
		}
		timeout_effect = {
			custom_effect_tooltip = add_1_funds_tt
			
		}
	}
	TT_rebuild_in_STATE = {
		icon = generic_construction
		state_target = yes
		target_trigger = {
			FROM = {
				is_controlled_by = ROOT
			}
			FROM = {
				has_dynamic_modifier = {
					modifier = TT_ravaged_lands
				}
			}
		} 
		complete_effect = {
			subtract_from_variable = {
				available_funds = 1
			}
		}
		
		days_remove = 150
		
		remove_effect = {
			remove_dynamic_modifier = {
				modifier = TT_ravaged_lands
			}
		}
		available = {
			ROOT = {
				
				custom_trigger_tooltip = {
					tooltip = has_available_funds
					check_variable = {
						available_funds > 0
					}
				}
			}
		}
	}
}
TT_european_workers_program_category = {
	TT_join_european_worker_program = {
		visible = {
			NOT = {
				has_dynamic_modifier = {
					modifier = TT_european_workers_program
				}
			}
		}
		cost = 25
		complete_effect = {
			add_to_variable = {
				global.european_workers_strengh = 0.02
			}
			add_dynamic_modifier = {
				modifier = TT_european_workers_program
			}
		}
	}

	TT_leave_european_worker_program = {
		visible = {
			has_dynamic_modifier = {
				modifier = TT_european_workers_program
			}
			NOT = {
				tag = FRA
			}

		}
		cost = 25
		complete_effect = {
			subtract_from_variable = {
				global.european_workers_strengh = 0.02
			}
			remove_dynamic_modifier = {
				modifier = TT_european_workers_program
			}
		}
	}

}
demobilization = {
	public_asks_for_demob = {
		days_mission_timeout = 60
		icon = revolt
		activation = {

			has_war = no
			num_divisions > 4
			NOT = {
				has_country_flag = is_rearming
			}
			OR = {
				has_excessive_army_size = yes
				AND = {
					needs_army_reduction_for_manpower = yes
					is_ai = yes
				}
				has_reached_maximum_divisions = yes
			}
			NOT = {
				any_other_country = {
					OR = {
						is_justifying_wargoal_against = ROOT
						has_wargoal_against = ROOT
						ROOT = { is_justifying_wargoal_against = PREV }
						ROOT = { has_wargoal_against = PREV }
					}
				}
			}
		}
		available = {
			OR = {
				custom_trigger_tooltip = {
					tooltip = army_demobilization_requirement_tt
					has_reached_maximum_divisions = no
				}
				has_reached_maximum_divisions = no
				has_war = yes
				any_other_country = {
					OR = {
						is_justifying_wargoal_against = ROOT
						has_wargoal_against = ROOT
						ROOT = { is_justifying_wargoal_against = PREV }
						ROOT = { has_wargoal_against = PREV }
					}
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
		is_good = no
		timeout_effect = {
			if = {
				limit = {
					is_ai = yes
				}
				country_event = kr.political.121
			}
			else = {
				increase_strikes = yes
			}
		}
	}
}